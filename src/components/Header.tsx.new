'use client'

import { useState } from 'react'
import { Globe, Menu, X } from 'lucide-react'
import { Link, usePathname } from '@/lib/navigation'

interface HeaderProps {
  locale: string
}

const languages = [
  { code: 'en', name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },
  { code: 'pl', name: 'Polski', flag: 'ðŸ‡µðŸ‡±' },
  { code: 'de', name: 'Deutsch', flag: 'ðŸ‡©ðŸ‡ª' },
  { code: 'hi', name: 'à¤¹à¤¿à¤‚à¤¦à¥€', flag: 'ðŸ‡®ðŸ‡³' }
]

export function Header({ locale }: HeaderProps) {
  const pathname = usePathname()
  const [isLanguageMenuOpen, setIsLanguageMenuOpen] = useState(false)
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)

  const currentLanguage = languages.find(lang => lang.code === locale) || languages[0]

  return (
    <header className="header">
      <div className="header-content">
        {/* Logo */}
        <Link href="/" className="logo">
          BoostifyViews
        </Link>

        {/* Desktop Actions */}
        <div className="header-actions">
          {/* Language Selector */}
          <div className="language-selector">
            <button
              className="language-button"
              onClick={() => setIsLanguageMenuOpen(!isLanguageMenuOpen)}
            >
              <span>{currentLanguage.flag}</span>
              <span>{currentLanguage.code.toUpperCase()}</span>
              <Globe className="w-4 h-4" />
            </button>

            {isLanguageMenuOpen && (
              <div className="language-dropdown">
                {languages.map((lang) => (
                  <Link
                    key={lang.code}
                    href={pathname}
                    locale={lang.code}
                    className="language-option"
                    onClick={() => setIsLanguageMenuOpen(false)}
                  >
                    <span>{lang.flag}</span>
                    <span>{lang.name}</span>
                  </Link>
                ))}
              </div>
            )}
          </div>

          {/* Mobile Menu Button */}
          <button
            className="mobile-menu-button"
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
          >
            {isMobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>
      </div>

      {/* Mobile Menu */}
      {isMobileMenuOpen && (
        <div className="mobile-menu">
          <div className="mobile-menu-content">
            {languages.map((lang) => (
              <Link
                key={lang.code}
                href={pathname}
                locale={lang.code}
                className="mobile-menu-item"
                onClick={() => {
                  setIsMobileMenuOpen(false)
                  setIsLanguageMenuOpen(false)
                }}
              >
                <span>{lang.flag}</span>
                <span>{lang.name}</span>
              </Link>
            ))}
          </div>
        </div>
      )}
    </header>
  )
}
